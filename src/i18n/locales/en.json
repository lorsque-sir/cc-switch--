{
  "app": {
    "title": "CC Switch",
    "description": "Claude Code & Codex Provider Switching Tool"
  },
  "common": {
    "add": "Add",
    "edit": "Edit",
    "delete": "Delete",
    "save": "Save",
    "cancel": "Cancel",
    "confirm": "Confirm",
    "close": "Close",
    "done": "Done",
    "settings": "Settings",
    "about": "About",
    "version": "Version",
    "loading": "Loading...",
    "success": "Success",
    "error": "Error",
    "unknown": "Unknown"
  },
  "header": {
    "viewOnGithub": "View on GitHub",
    "toggleDarkMode": "Switch to Dark Mode",
    "toggleLightMode": "Switch to Light Mode",
    "addProvider": "Add Provider",
    "switchToChinese": "Switch to Chinese",
    "switchToEnglish": "Switch to English"
  },
  "provider": {
    "noProviders": "No providers added yet",
    "noProvidersDescription": "Click the \"Add Provider\" button in the top right to configure your first API provider",
    "currentlyUsing": "Currently Using",
    "enable": "Enable",
    "disable": "Disable",
    "inUse": "In Use",
    "editProvider": "Edit Provider",
    "deleteProvider": "Delete Provider",
    "addNewProvider": "Add New Provider",
    "configError": "Configuration Error",
    "notConfigured": "Not configured for official website",
    "applyToVSCode": "Apply to VS Code",
    "removeFromVSCode": "Remove from VS Code",
    "applyToClaudePlugin": "Apply to Claude plugin",
    "removeFromClaudePlugin": "Remove from Claude plugin",
    "testSpeed": "Test Speed",
    "testing": "Testing...",
    "testSpeedTooltip": "Test endpoint response time",
    "latency": "Latency",
    "speedTestFailed": "Speed test failed"
  },
  "notifications": {
    "providerAdded": "Provider added successfully",
    "addFailed": "Add failed: {{error}}",
    "addFailedGeneric": "Add failed, please try again",
    "batchAddSuccess": "Successfully added {{count}} provider(s)",
    "batchAddPartial": "Completed: {{success}} succeeded, {{fail}} failed",
    "batchAddFailed": "Batch add failed, please try again",
    "providerSaved": "Provider configuration saved",
    "providerDeleted": "Provider deleted successfully",
    "switchSuccess": "Switch successful! Please restart {{appName}} terminal to take effect",
    "switchFailed": "Switch failed, please check configuration",
    "disableSuccess": "Provider disabled, env field cleared",
    "disableFailed": "Disable failed, please check configuration",
    "autoImported": "Default provider created from existing configuration",
    "appliedToVSCode": "Applied to VS Code, restart Codex plugin to take effect",
    "removedFromVSCode": "Removed from VS Code, restart Codex plugin to take effect",
    "syncedToVSCode": "Synced to VS Code",
    "vscodeSettingsNotFound": "VS Code user settings file (settings.json) not found",
    "missingBaseUrl": "Current configuration missing base_url, cannot write to VS Code",
    "saveFailed": "Save failed: {{error}}",
    "saveFailedGeneric": "Save failed, please try again",
    "syncVSCodeFailed": "Sync to VS Code failed",
    "appliedToClaudePlugin": "Applied to Claude plugin",
    "removedFromClaudePlugin": "Removed from Claude plugin",
    "syncClaudePluginFailed": "Sync Claude plugin failed"
  },
  "confirm": {
    "deleteProvider": "Delete Provider",
    "deleteProviderMessage": "Are you sure you want to delete provider \"{{name}}\"? This action cannot be undone."
  },
  "settings": {
    "title": "Settings",
    "general": "General",
    "language": "Language",
    "languageOptionChinese": "中文",
    "languageOptionEnglish": "English",
    "windowBehavior": "Window Behavior",
    "minimizeToTray": "Minimize to tray on close",
    "minimizeToTrayDescription": "When checked, clicking the close button will hide to system tray, otherwise the app will exit directly.",
    "autoStart": "Launch at startup",
    "autoStartDescription": "When checked, the application will automatically start when your system boots (launches in background).",
    "globalShortcut": "Global Shortcut",
    "globalShortcutPlaceholder": "e.g., CommandOrControl+Shift+C",
    "globalShortcutDescription": "Set a global keyboard shortcut to show or hide the main window. Leave blank to disable.",
    "globalShortcutExamples": "Examples: CommandOrControl+Shift+C (Command on Mac, Ctrl on Windows/Linux), Alt+Space, CmdOrCtrl+`",
    "configFileLocation": "Configuration File Location",
    "openFolder": "Open Folder",
    "configDirectoryOverride": "Configuration Directory Override (Advanced)",
    "configDirectoryDescription": "When using Claude Code or Codex in environments like WSL, you can manually specify the configuration directory in WSL to keep provider data consistent with the main environment.",
    "claudeConfigDir": "Claude Code Configuration Directory",
    "codexConfigDir": "Codex Configuration Directory",
    "browsePlaceholderClaude": "e.g., /home/<your-username>/.claude",
    "browsePlaceholderCodex": "e.g., /home/<your-username>/.codex",
    "browseDirectory": "Browse Directory",
    "resetDefault": "Reset to default directory (takes effect after saving)",
    "checkForUpdates": "Check for Updates",
    "updateTo": "Update to v{{version}}",
    "updating": "Updating...",
    "checking": "Checking...",
    "upToDate": "Up to Date",
    "releaseNotes": "Release Notes",
    "viewReleaseNotes": "View release notes for this version",
    "viewCurrentReleaseNotes": "View current version release notes"
  },
  "apps": {
    "claude": "Claude Code",
    "codex": "Codex",
    "droid": "Droid"
  },
  "droid": {
    "apiKey": "Factory API Key",
    "apiKeyPlaceholder": "Enter your Factory API Key (fk-...)",
    "apiKeyHelp": "API Key from Factory.ai, starts with fk-",
    "showApiKey": "Show API Key",
    "hideApiKey": "Hide API Key",
    "batchImport": "Batch Import",
    "batchAddKeys": "Batch Add API Keys",
    "batchAddHelp": "Add multiple Factory API Keys at once, separated by newlines, commas, or semicolons",
    "batchAddTip1": "One key per line, or separated by commas/semicolons",
    "batchAddTip2": "Auto-filters invalid formats, keeps only keys starting with fk-",
    "batchAddTip3": "Auto-deduplicates, identical keys added only once",
    "namePrefix": "Name Prefix",
    "namePrefixHelp": "Will be named as: {{prefix}} 1, {{prefix}} 2, {{prefix}} 3...",
    "apiKeys": "API Keys",
    "apiKeysPlaceholder": "Paste multiple API Keys, supports:\n\nfk-key1...\nfk-key2...\nfk-key3...\n\nOr comma-separated:\nfk-key1, fk-key2, fk-key3",
    "willAdd": "Will add {{count}} provider(s)",
    "batchAdd": "Batch Add ({{count}})",
    "balance": "Balance",
    "checkBalance": "Check Balance",
    "refreshBalance": "Refresh Balance",
    "used": "Used",
    "remaining": "Remaining",
    "allowance": "Total Allowance",
    "exceeded": "Exceeded",
    "normal": "Normal",
    "checking": "Checking...",
    "lastUpdated": "Last Updated",
    "balanceError": "Query Failed",
    "envVarSet": "Environment Variable Set",
    "envVarCleared": "Environment Variable Cleared",
    "noBalance": "Balance not checked",
    "justNow": "Just now",
    "minutesAgo": "{{minutes}} minutes ago",
    "hoursAgo": "{{hours}} hours ago",
    "daysAgo": "{{days}} days ago"
  },
  "console": {
    "providerSwitchReceived": "Received provider switch event:",
    "setupListenerFailed": "Failed to setup provider switch listener:",
    "updateProviderFailed": "Update provider failed:",
    "addProviderFailed": "Add provider failed:",
    "syncToVSCodeFailed": "Sync to VS Code failed:",
    "autoImportFailed": "Auto import default configuration failed:",
    "openLinkFailed": "Failed to open link:",
    "getVersionFailed": "Failed to get version info:",
    "loadSettingsFailed": "Failed to load settings:",
    "getConfigPathFailed": "Failed to get config path:",
    "getConfigDirFailed": "Failed to get config directory:",
    "detectPortableFailed": "Failed to detect portable mode:",
    "saveSettingsFailed": "Failed to save settings:",
    "updateFailed": "Update failed:",
    "checkUpdateFailed": "Check for updates failed:",
    "openConfigFolderFailed": "Failed to open config folder:",
    "selectConfigDirFailed": "Failed to select config directory:",
    "getDefaultConfigDirFailed": "Failed to get default config directory:",
    "openReleaseNotesFailed": "Failed to open release notes:"
  },
  "mcp": {
    "title": "MCP Management",
    "claudeTitle": "Claude Code MCP Management",
    "codexTitle": "Codex MCP Management",
    "userLevelPath": "User-level MCP path",
    "serverList": "Servers",
    "loading": "Loading...",
    "empty": "No MCP servers",
    "emptyDescription": "Click the button in the top right to add your first MCP server",
    "add": "Add MCP",
    "addServer": "Add MCP",
    "editServer": "Edit MCP",
    "addClaudeServer": "Add Claude Code MCP",
    "editClaudeServer": "Edit Claude Code MCP",
    "addCodexServer": "Add Codex MCP",
    "editCodexServer": "Edit Codex MCP",
    "configPath": "Config Path",
    "serverCount": "{{count}} MCP server(s) configured",
    "enabledCount": "{{count}} enabled",
    "template": {
      "fetch": "Quick Template: mcp-fetch"
    },
    "form": {
      "title": "MCP Title (Unique)",
      "titlePlaceholder": "my-mcp-server",
      "name": "Display Name",
      "namePlaceholder": "e.g. @modelcontextprotocol/server-time",
      "description": "Description",
      "descriptionPlaceholder": "Optional description",
      "tags": "Tags (comma separated)",
      "tagsPlaceholder": "stdio, time, utility",
      "homepage": "Homepage",
      "homepagePlaceholder": "https://example.com",
      "docs": "Docs",
      "docsPlaceholder": "https://example.com/docs",
      "additionalInfo": "Additional Info",
      "jsonConfig": "JSON Configuration",
      "jsonPlaceholder": "{\n  \"type\": \"stdio\",\n  \"command\": \"uvx\",\n  \"args\": [\"mcp-server-fetch\"]\n}",
      "tomlConfig": "TOML Configuration",
      "tomlPlaceholder": "type = \"stdio\"\ncommand = \"uvx\"\nargs = [\"mcp-server-fetch\"]",
      "useWizard": "Config Wizard"
    },
    "wizard": {
      "title": "MCP Configuration Wizard",
      "hint": "Quickly configure MCP server and auto-generate JSON configuration",
      "type": "Type",
      "typeStdio": "stdio",
      "typeHttp": "http",
      "command": "Command",
      "commandPlaceholder": "npx or uvx",
      "args": "Arguments",
      "argsPlaceholder": "arg1\narg2",
      "env": "Environment Variables",
      "envPlaceholder": "KEY1=value1\nKEY2=value2",
      "url": "URL",
      "urlPlaceholder": "https://api.example.com/mcp",
      "urlRequired": "Please enter URL",
      "headers": "Headers (optional)",
      "headersPlaceholder": "Authorization: Bearer your_token_here\nContent-Type: application/json",
      "preview": "Configuration Preview",
      "apply": "Apply Configuration"
    },
    "id": "Identifier (unique)",
    "type": "Type",
    "command": "Command",
    "validateCommand": "Validate Command",
    "args": "Args",
    "argsPlaceholder": "e.g., mcp-server-fetch --help",
    "env": "Environment (one per line, KEY=VALUE)",
    "envPlaceholder": "FOO=bar\nHELLO=world",
    "reset": "Reset",
    "notice": {
      "restartClaude": "Written. Restart Claude to take effect."
    },
    "msg": {
      "saved": "Saved",
      "deleted": "Deleted",
      "enabled": "Enabled",
      "disabled": "Disabled",
      "templateAdded": "Template added",
      "synced": "Synced to {{targetApp}}",
      "syncSkipped": "Target app already has this MCP, skipped"
    },
    "sync": {
      "title": "Sync to Other App",
      "syncToOtherApp": "Sync to {{targetApp}}",
      "description": "Sync this MCP configuration to another app ({{targetApp}})",
      "conflictTitle": "Sync Conflict",
      "conflictMessage": "{{targetApp}} already has MCP \"{{id}}\", overwrite?",
      "overwrite": "Overwrite",
      "skip": "Skip",
      "checking": "Checking...",
      "syncFailed": "Sync failed"
    },
    "error": {
      "idRequired": "Please enter identifier",
      "idExists": "Identifier already exists. Please choose another.",
      "jsonInvalid": "Invalid JSON format",
      "tomlInvalid": "Invalid TOML format",
      "commandRequired": "Please enter command",
      "singleServerObjectRequired": "Please paste a single MCP server object (do not include top-level mcpServers)",
      "saveFailed": "Save failed",
      "deleteFailed": "Delete failed"
    },
    "validation": {
      "ok": "Command available",
      "fail": "Command not found"
    },
    "confirm": {
      "deleteTitle": "Delete MCP Server",
      "deleteMessage": "Are you sure you want to delete MCP server \"{{id}}\"? This action cannot be undone."
    },
    "presets": {
      "title": "Select MCP Type",
      "enable": "Enable",
      "enabled": "Enabled",
      "installed": "Installed",
      "docs": "Docs",
      "requiresEnv": "Requires env",
      "fetch": {
        "name": "mcp-server-fetch",
        "description": "Universal HTTP request tool, supports GET/POST and other HTTP methods, suitable for quick API requests and web data scraping"
      },
      "time": {
        "name": "@modelcontextprotocol/server-time",
        "description": "Time query tool providing current time, timezone conversion, and date calculation features"
      },
      "memory": {
        "name": "@modelcontextprotocol/server-memory",
        "description": "Knowledge graph memory system supporting entities, relations, and observations to help AI remember important information from conversations"
      },
      "sequential-thinking": {
        "name": "@modelcontextprotocol/server-sequential-thinking",
        "description": "Sequential thinking tool helping AI break down complex problems into multiple steps for deeper thinking"
      },
      "context7": {
        "name": "@upstash/context7-mcp",
        "description": "Context7 documentation search tool providing latest library docs and code examples, with higher limits when configured with a key"
      }
    }
  }
}
